name: Action

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 18

jobs:
  Linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - name: Code Linting
        run: npm run lint
  Build:
    needs: Linting
    name: Build docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build the latest Docker image
        run: docker build . --file Dockerfile --tag f1ctashka/node-app:latest
      - name: Export docker image
        run: docker save f1ctashka/node-app:latest > /tmp/docker-image.tar
      - name: Save image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: /tmp/docker-image.tar
  Push:
    needs: Build
    name: Push docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Retrieve docker image as artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp/
      - name: Import docker image
        run: docker load < /tmp/docker-image.tar
      - name: Push the latest Docker image
        run: docker push f1ctashka/node-app:latest
  Deploy:
    needs: Push
    name: Deployment check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Retrieve docker image
        run: docker pull f1ctashka/node-app:latest
      - name: Start container and check
        run: docker run -d -p 80:3000 -m 128m --cpus="1" --name node-app --rm f1ctashka/node-app:latest && sleep 60 && curl -v localhost
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: docker-image